# Generated by Django 4.0.5 on 2022-06-16 06:03

from django.db import migrations
from wagtail.blocks import StreamValue

def forward(apps, schema_editor):
    BlogPage = apps.get_model('blog', 'BlogPage')

    for bp in BlogPage.objects.all():
        stream_data = []   
        mapped = False 

        for block in bp.content.raw_data:
            if block['type'] == 'quote':
                mapped = True
                new_values = {}
                for key, value in block['value'].items():
                    if key == 'person':
                        new_values['author'] = value
                    else:
                        new_values[key] = value
                block['value'] = new_values
                print(block)
                stream_data.append(block)

            else:
                stream_data.append(block)

        if mapped:
            stream_block = bp.content.stream_block
            bp.content = StreamValue(stream_block, stream_data, is_lazy=True)
            bp.save()


def backward(apps, schema_editor):
    BlogPage = apps.get_model('blog', 'BlogPage')

    for bp in BlogPage.objects.all():
        stream_data = []   
        mapped = False 

        for block in bp.content.raw_data:
            if block['type'] == 'quote':
                mapped = True
                new_values = {}
                for key, value in block['value'].items():
                    if key == 'author':
                        new_values['person'] = value
                    else:
                        new_values[key] = value
                block['value'] = new_values
                print(block)
                stream_data.append(block)

            else:
                stream_data.append(block)

        if mapped:
            stream_block = bp.content.stream_block
            bp.content = StreamValue(stream_block, stream_data, is_lazy=True)
            bp.save()


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0003_alter_blogpage_content'),
    ]

    operations = [
        migrations.RunPython(forward, backward)
    ]
